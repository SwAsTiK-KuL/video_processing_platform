version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: video_processing
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    volumes:
      - media_data:/app/storage
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db/video_processing
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: celery -A app.core.celery_app worker --loglevel=info --concurrency=4
    volumes:
      - media_data:/app/storage
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db/video_processing
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: celery -A app.core.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db/video_processing
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - media_data:/app/storage
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  media_data: